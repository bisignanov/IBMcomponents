name: Release base
run-name:
  ${{ inputs.type }} - dry-run:${{ inputs.dry-run }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
        default: first minor rc
      dry-run:
        required: true
        description: 'Run dry run?'
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    # Recommended by npm for publishing with provenance https://docs.npmjs.com/generating-provenance-statements
    permissions:
      id-token: write
      contents: write
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          fetch-depth: '0'
      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - run: |
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config user.name $GITHUB_ACTOR

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: https://registry.npmjs.org
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Continuous integration check (includes build)
        run: yarn ci-check
      - name: Set NPM token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.CARBON_BOT_NPM_TOKEN }}" >> .npmrc
      - name: Set dry run env variable
        run: |
          if [ "${{ github.event.inputs.dry-run }}" == "false"  ]; then
            echo "DRY_RUN=--yes" >> $GITHUB_ENV
          fi

      - name: Publish full minor release (ie. v1.x.0)
        if: github.event.inputs.type == 'full minor release'
        run: |
          echo "DRY RUN: ${{ env.DRY_RUN }}"
          # yarn lerna publish minor --conventional-graduate $(echo "${{ env.DRY_RUN }}")

      - name: Publish first minor RC (ie. v1.x.0-rc.0)
        if: github.event.inputs.type == 'first minor rc'
        run: |
          echo "DRY RUN: ${{ env.DRY_RUN }}"
          yarn lerna publish preminor --conventional-prerelease --preid rc --pre-dist-tag next $(echo "${{ env.DRY_RUN }}")

      - name: Publish full patch release (ie. v1.0.x)
        if: github.event.inputs.type == 'full patch release'
        run: |
          echo "DRY RUN: ${{ env.DRY_RUN }}"
          yarn lerna publish patch --conventional-graduate $(echo "${{ env.DRY_RUN }}")

      - name: Publish first patch RC (ie. v1.0.x-rc.0)
        if: github.event.inputs.type == 'first patch rc'
        run: |
          echo "DRY RUN: ${{ env.DRY_RUN }}"
          yarn lerna publish prepatch --conventional-prerelease --preid rc --pre-dist-tag next $(echo "${{ env.DRY_RUN }}")

      - name: Publish subsequent RC (ie. v1.0.0-rc.x)
        if: github.event.inputs.type == 'subsequent rc'
        run: |
          echo "DRY RUN: ${{ env.DRY_RUN }}"
          yarn lerna publish --conventional-prerelease --preid rc --pre-dist-tag next $(echo "${{ env.DRY_RUN }}")
