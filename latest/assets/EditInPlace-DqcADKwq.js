import{p as R,j as n,c as I,I as q}from"./settings-DrdbGLhD.js";import{r as l}from"./index-BwDkhjyp.js";import{c as _,C as Y}from"./deprecate-D9ms-jbM.js";import{P as t}from"./index-Dk74W0Oi.js";import{g as Z}from"./devtools-B_UYo462.js";import{W as ee}from"./bucket-17-CArjO86K.js";import{C as te}from"./events-Bq7WR1mU.js";import{a as ne}from"./bucket-5-BuK6y5Rd.js";const $="EditInPlace",e=`${R.prefix}--edit-in-place`,ae={tooltipAlignment:"top",size:"sm"};let p=l.forwardRef(({cancelLabel:N,editAlwaysVisible:E,editLabel:A,id:S,inheritTypography:H,invalid:s,invalidLabel:L=" ",invalidText:z,labelText:V,onCancel:F,onChange:O,onSave:W,saveLabel:B,size:o="sm",tooltipAlignment:c,value:u,...D},K)=>{const[f,g]=l.useState(!1),[m,j]=l.useState(""),[h,v]=l.useState(!1),r=l.useRef(null),b=u!==m&&!s,y=l.useRef(!1),G=typeof c=="object",T=["edit","save","cancel"].reduce((a,i)=>(a[i]=(G?c[i]:c)??ae.tooltipAlignment,a),{});l.useEffect(()=>{!m&&!h&&j(u)},[m,h,u]);const C=({currentTarget:a,relatedTarget:i})=>a.contains(i),J=({target:a})=>{h||v(!0),O(a.value)},P=a=>{var i;C(a)||((i=r.current)==null||i.focus(),g(!0))},x=()=>{j(u),g(!1),v(!1),W()},w=()=>{g(!1),v(!1),F(m)},M=a=>{y.current||C(a)||(b?x():w())},Q=()=>{b&&x()},U=()=>{w()},X=a=>{var i,k;switch(y.current=!0,a.key){case"Escape":(i=r.current)==null||i.blur(),U();break;case"Enter":(k=r.current)==null||k.blur(),Q();break}y.current=!1};return n.jsxs("div",{...D,ref:K,...Z($),children:[n.jsxs("div",{className:_(e,`${e}--${o}`,{[`${e}--focused`]:f,[`${e}--invalid`]:s,[`${e}--inherit-type`]:H,[`${e}--overflows`]:r.current&&r.current.scrollWidth>r.current.offsetWidth}),onFocus:P,onBlur:M,children:[n.jsx("input",{id:S,className:_(`${e}__text-input`,`${I.prefix}--text-input`,`${I.prefix}--text-input--${o}`),type:"text",value:u,onChange:J,ref:r,onKeyDown:X,"aria-label":V,"aria-invalid":s}),n.jsx("div",{className:`${e}__ellipsis`,"aria-hidden":!f,children:"â€¦"}),n.jsxs("div",{className:`${e}__toolbar`,children:[s&&n.jsx(ee,{size:16,className:`${e}__warning-icon`}),f?n.jsxs(n.Fragment,{children:[n.jsx(q,{align:T.cancel,size:o,label:N,onClick:w,kind:"ghost",tabIndex:0,className:`${e}__btn ${e}__btn-cancel`,children:n.jsx(Y,{size:16})},"cancel"),n.jsx(q,{align:T.save,size:o,label:B,onClick:x,kind:"ghost",tabIndex:0,className:`${e}__btn ${e}__btn-save`,disabled:!b,children:n.jsx(te,{size:16})},"save")]}):n.jsx(q,{align:T.edit,className:_(`${e}__btn`,`${e}__btn-edit`,{[`${e}__btn-edit--always-visible`]:E}),size:o,label:A,onClick:P,kind:"ghost",tabIndex:0,children:n.jsx(ne,{size:16})},"edit")]})]}),s&&n.jsx("p",{className:`${e}__warning-text`,children:z??L})]})});p=R.checkComponentEnabled(p,$);p.displayName=$;const ie={invalidText:t.string},d=t.oneOf(["top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"]);p.propTypes={cancelLabel:t.string.isRequired,editAlwaysVisible:t.bool,editLabel:t.string.isRequired,id:t.string.isRequired,inheritTypography:t.bool,invalid:t.bool,invalidText:t.string,labelText:t.string.isRequired,onCancel:t.func.isRequired,onChange:t.func.isRequired,onSave:t.func.isRequired,saveLabel:t.string.isRequired,size:t.oneOf(["sm","md","lg"]),tooltipAlignment:t.oneOfType([d,t.shape({cancel:d,edit:d,save:d})]),value:t.string.isRequired,...ie};p.__docgenInfo={description:"",methods:[],displayName:"EditInPlace",props:{cancelLabel:{required:!0,tsType:{name:"string"},description:"label for cancel button",type:{name:"string"}},editAlwaysVisible:{required:!1,tsType:{name:"boolean"},description:"By default the edit icon is shown on hover only.",type:{name:"bool"}},editLabel:{required:!0,tsType:{name:"string"},description:"label for edit button",type:{name:"string"}},id:{required:!0,tsType:{name:"string"},description:"Specify a custom id for the input",type:{name:"string"}},inheritTypography:{required:!1,tsType:{name:"boolean"},description:`inheritTypography - causes the text entry field to inherit typography settings
assigned to the container. This is useful when editing titles for instance.

NOTE: The size property limits the vertical size of the input element.
Inherited font's should be selected to fit within the size selected.`,type:{name:"bool"}},invalid:{required:!1,tsType:{name:"boolean"},description:"determines if the input is invalid",type:{name:"bool"}},invalidText:{required:!1,tsType:{name:"string"},description:"text that is displayed if the input is invalid",type:{name:"string"}},labelText:{required:!0,tsType:{name:"string"},description:"Provide the text that will be read by a screen reader when visiting this control",type:{name:"string"}},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the cancel button is pressed or when the user removes focus from the input and there is no new value",type:{name:"func"}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"handler that is called when the input is updated",type:{name:"func"}},onSave:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"handler that is called when the save button is pressed or when the user removes focus from the input if it has a new value",type:{name:"func"}},saveLabel:{required:!0,tsType:{name:"string"},description:"label for save button",type:{name:"string"}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"vertical size of control",defaultValue:{value:"'sm'",computed:!1},type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]}},tooltipAlignment:{required:!1,tsType:{name:"union",raw:"AlignPropType | Shape",elements:[{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0},{name:"signature",type:"object",raw:`{
  cancel: AlignPropType;
  edit: AlignPropType;
  save: AlignPropType;
}`,signature:{properties:[{key:"cancel",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"edit",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}},{key:"save",value:{name:"union",raw:`| 'top'
| 'top-left'
| 'top-right'
| 'bottom'
| 'bottom-left'
| 'bottom-right'
| 'left'
| 'right'`,elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'top-left'"},{name:"literal",value:"'top-right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottom-left'"},{name:"literal",value:"'bottom-right'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}],required:!0}}]}}]},description:`tooltipAlignment from the standard tooltip. Default center.

Can be passed either as one of tooltip options or as an object specifying cancel, edit and save separately`,type:{name:"union",value:[{name:"custom",raw:"alignPropType"},{name:"shape",value:{cancel:{name:"custom",raw:"alignPropType",required:!1},edit:{name:"custom",raw:"alignPropType",required:!1},save:{name:"custom",raw:"alignPropType",required:!1}}}]}},value:{required:!0,tsType:{name:"string"},description:"current value of the input",type:{name:"string"}},invalidLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"' '",computed:!1}}},composes:["PropsWithChildren"]};export{p as E};
