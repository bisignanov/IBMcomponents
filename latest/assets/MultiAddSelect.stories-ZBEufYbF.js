import{j as i,p as A,B as O}from"./settings-Bk-Ww79A.js";import{r as F}from"./index-BwDkhjyp.js";import"./useMergedRefs-DoviDd4t.js";import{i as D}from"./headshot-DLlybMEg.js";import{S as z}from"./StoryDocsPage-Cy75T9UZ.js";import{P as e}from"./index-Dk74W0Oi.js";import{g as M}from"./devtools-jK7s13u1.js";import{A as R}from"./AddSelect-CkTnghxv.js";import{b as n}from"./bucket-5-VXADWwuF.js";import{G as h}from"./bucket-7-B5iqIa9B.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CJvxHwuA.js";import"./events-CiqBCP_Q.js";import"./index-8ToAQMOn.js";import"./index-BONylQH5.js";import"./index-wBCg0-F9.js";import"./iframe-r8cxUnT0.js";import"../sb-preview/runtime.js";import"./extends-CCbyfPlC.js";import"./index-C2eUe6cH.js";import"./index-BjQFKvNH.js";import"./isSymbol-BZYRlrjc.js";import"./index-DrFu-skq.js";import"./story-helper-Cn6RZn1q.js";import"./tslib.es6-B4_xh3D5.js";import"./Tag-BKIfEND7.js";import"./DefinitionTooltip-D-5Wnfe9.js";import"./Text-BVB9JT_I.js";import"./AccordionItem-CevKf_wO.js";import"./NoDataEmptyState-CcxyGdLi.js";import"./Link-BwB-I-vI.js";import"./EmptyState-D7C8Tfls.js";import"./props-helper-DKwMo5Mj.js";import"./EmptyStateV2-BYPEbPpC.js";import"./NoDataIllustration-BN7hR1wg.js";import"./uuidv4-BQrI85uz.js";import"./BreadcrumbItem-BxTvoTcp.js";import"./bucket-12-CjYCkBh9.js";import"./Dropdown-CrpGuz_q.js";import"./index-CfaeQWAR.js";import"./index-DcAOwtUU.js";import"./FormContext-C7kRVu4t.js";import"./mergeRefs-CTUecegF.js";import"./bucket-18-D3Jjo1Sn.js";import"./index-Cnj8eq3S.js";import"./LayerContext-DbU-6VX4.js";import"./UserProfileImage-BNdailgV.js";import"./TooltipTrigger-CGvFtJFI.js";import"./bucket-17-CI5600gi.js";import"./bucket-13-PtAwXpYp.js";import"./Checkbox-kY2Abb91.js";import"./index-pjE0epes.js";import"./index-Bxn63eqr.js";import"./useAttachedMenu-Cur6rMAi.js";import"./wrapFocus-CuszVIVc.js";import"./Search-C6T7hozM.js";import"./bucket-14-BWqht3cs.js";import"./bucket-0-W33F5V9e.js";import"./bucket-6-GhvU-pGQ.js";import"./ButtonSet-BfrcW0LA.js";import"./NotFoundEmptyState-B3XjHmUG.js";import"./NotFoundIllustration-CsQd4na7.js";import"./Tearsheet-DFQM3dIF.js";import"./TearsheetShell-Cp-zdMef.js";import"./useResizeObserver-CYrpFlRY.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./ComposedModal-DJPTMTV_.js";import"./InlineLoading-BtULKugn.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./usePortalTarget-DMYtlTkG.js";import"./feature-flags-B58iM6ui.js";import"./index-DGzdVEvj.js";import"./useFocus-C32cEjdc.js";import"./usePreviousValue-DDnp_zt4.js";import"./ActionSet-rjy9XBbR.js";import"./TearsheetNarrow-Br2NXJzL.js";const c="MultiAddSelect";let r=F.forwardRef((t,s)=>i.jsx(R,{...t,multi:!0,ref:s,...M(c)}));r=A.checkComponentEnabled(r,c);r.propTypes={className:e.string,columnInputPlaceholder:e.string,description:e.string,globalFilters:e.arrayOf(e.shape({id:e.string,label:e.string})),globalFiltersIconDescription:e.string,globalFiltersPlaceholderText:e.string,globalFiltersPrimaryButtonText:e.string,globalFiltersSecondaryButtonText:e.string,globalSearchLabel:e.string,globalSearchPlaceholder:e.string,illustrationTheme:e.oneOf(["light","dark"]),influencerTitle:e.string,items:e.shape({modifiers:e.shape({label:e.string,options:e.array}),sortBy:e.array,filterBy:e.array,entries:e.arrayOf(e.shape({avatar:e.shape({alt:e.string,icon:e.func,src:e.string,theme:e.oneOf(["light","dark"])}),children:e.object,icon:e.func,id:e.string.isRequired,subtitle:e.string,title:e.string.isRequired,value:e.string.isRequired}))}),itemsLabel:e.string,noResultsDescription:e.string,noResultsTitle:e.string,noSelectionDescription:e.string,noSelectionTitle:e.string,onClose:e.func,onCloseButtonText:e.string,onSubmit:e.func,onSubmitButtonText:e.string,open:e.bool,searchResultsTitle:e.string,title:e.string};r.displayName=c;r.__docgenInfo={description:"Used to add or select multiple or more items from larger lists or hierarchies.",methods:[],displayName:"MultiAddSelect",props:{className:{required:!1,tsType:{name:"string"},description:"optional class name",type:{name:"string"}},columnInputPlaceholder:{required:!1,tsType:{name:"string"},description:"placeholder for column input filter",type:{name:"string"}},description:{required:!1,tsType:{name:"string"},description:"text description that appears under the title",type:{name:"string"}},globalFilters:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id?: string;
  label?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!1}},{key:"label",value:{name:"string",required:!1}}]}}],raw:"Filter[]"},description:`options to display in the global filter box. values are generated
from the id which should correlate with a specific property in an
item entry`,type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",required:!1},label:{name:"string",required:!1}}}}},globalFiltersIconDescription:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}},globalFiltersPlaceholderText:{required:!1,tsType:{name:"string"},description:"placeholder text for the global filter dropdown",type:{name:"string"}},globalFiltersPrimaryButtonText:{required:!1,tsType:{name:"string"},description:"text for the global filter primary button",type:{name:"string"}},globalFiltersSecondaryButtonText:{required:!1,tsType:{name:"string"},description:"text for the global filter secondary button",type:{name:"string"}},globalSearchLabel:{required:!1,tsType:{name:"string"},description:"label for global search input",type:{name:"string"}},globalSearchPlaceholder:{required:!1,tsType:{name:"string"},description:"placeholder for global search input",type:{name:"string"}},illustrationTheme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"the theme for the empty state illustration",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]}},influencerTitle:{required:!1,tsType:{name:"string"},description:"title that displays in the sidebar / influencer",type:{name:"string"}},items:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  entries?: Entry[];
  modifiers: Modifier;
  sortBy: string[];
  filterBy: string[];
}`,signature:{properties:[{key:"entries",value:{name:"Array",elements:[{name:"Entry"}],raw:"Entry[]",required:!1}},{key:"modifiers",value:{name:"signature",type:"object",raw:`{
  label?: string;
  options?: string[];
}`,signature:{properties:[{key:"label",value:{name:"string",required:!1}},{key:"options",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]},required:!0}},{key:"sortBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"filterBy",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]}},description:`object that contains the item data. for more information reference the
"Structuring items" section in the docs tab`,type:{name:"shape",value:{modifiers:{name:"shape",value:{label:{name:"string",required:!1},options:{name:"array",required:!1}},required:!1},sortBy:{name:"array",required:!1},filterBy:{name:"array",required:!1},entries:{name:"arrayOf",value:{name:"shape",value:{avatar:{name:"shape",value:{alt:{name:"string",required:!1},icon:{name:"func",required:!1},src:{name:"string",required:!1},theme:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}],required:!1}},required:!1},children:{name:"object",required:!1},icon:{name:"func",required:!1},id:{name:"string",required:!0},subtitle:{name:"string",required:!1},title:{name:"string",required:!0},value:{name:"string",required:!0}}},required:!1}}}},itemsLabel:{required:!1,tsType:{name:"string"},description:"label that display above the list of items",type:{name:"string"}},noResultsDescription:{required:!1,tsType:{name:"string"},description:"text to display when no results are found from the global search",type:{name:"string"}},noResultsTitle:{required:!1,tsType:{name:"string"},description:"title to display when no results are found from the global search",type:{name:"string"}},noSelectionDescription:{required:!1,tsType:{name:"string"},description:"text body that displays in the sidebar when nothing is selected",type:{name:"string"}},noSelectionTitle:{required:!1,tsType:{name:"string"},description:"title that displays in the sidebar when nothing is selected",type:{name:"string"}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to call when the close button clicked",type:{name:"func"}},onCloseButtonText:{required:!1,tsType:{name:"string"},description:"text for close button",type:{name:"string"}},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"function to call when the submit button is clicked. returns a selection",type:{name:"func"}},onSubmitButtonText:{required:!1,tsType:{name:"string"},description:"text for the submit button",type:{name:"string"}},open:{required:!1,tsType:{name:"boolean"},description:"specifies if the component is open or not",type:{name:"bool"}},searchResultsTitle:{required:!1,tsType:{name:"string"},description:"text that displays when displaying filtered items",type:{name:"string"}},title:{required:!1,tsType:{name:"string"},description:"header text",type:{name:"string"}}}};const P=()=>i.jsx(z,{altGuidelinesHref:"https://pages.github.ibm.com/cdai-design/pal/patterns/add-and-select/usage",blocks:[{title:"Structuring items",description:`The \`items\` object has a lot of customization potential and can greatly effect
the way the component is displayed and how you interact with it.

Let's walk through an example.`,source:{code:`items: {
  modifiers: { // adds a modifier dropdown inside the items
    label: PropTypes.string, // label for the dropdown
    options: PropTypes.array, // list of options / values for the dropdown
  },
  sortBy: ['title'], // designates which properties should be used to sort the column when using a hierarchy
  entries: [ // the actual list of items / entries
    {
      id: '1', // required unique id for the entry
      value: '1', // required value of the entry
      title: 'item 1', // required title to display
      subtitle: 'item 1 subtitle', // subtitle to display
      children: { // designates if entry has children. if the children prop is found a hierarchy list will be used
        sortBy: ['title', 'size'],
        filterBy: 'fileType', // designates which property should be used to filter the column of items
        entries: [
          {
            id: '1-1',
            value: 'file1.pdf',
            title: 'file1.pdf',
            fileType: 'pdf',
            size: '100',
            icon: Document16, // designates if an icon should be displayed. While similar to avatar icon, both have different displays.
            tag: 'business',
            avatar: { // designates if an avatar should be displayed
              alt: 'alt text',
              icon: <Icon />,
              src: 'avatar.png',
            },
          },
        ],
      },
    },
  ],
}`}},{description:"The properties that have been commented on like `id`, `value`, and `icon` have\nspecific use within the component and are generally required. Other properties\nlike `fileType` and `size` do not and will simply show up as details in the\nsidebar when selected."}]});P.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const u=`${A.prefix}--add-select__meta-panel`,nt={title:"IBM Products/Patterns/Add and select/MultiAddSelect",component:r,tags:["autodocs"],parameters:{docs:{page:P}},argTypes:{items:{control:{type:"select",labels:{0:"no items",1:"three items",2:"with hierarchy",3:"with modifiers",4:"with avatars"}},options:[0,1,2,3,4],mapping:{0:{entries:[]},1:{entries:[{id:"1",value:"1",title:"item 1",subtitle:"item 1 subtitle",meta:i.jsxs("div",{className:`${u}-entry`,children:[i.jsx("p",{className:`${u}-entry-title`,children:"html support"}),i.jsx("p",{className:`${u}-entry-body`,children:"also supports nodes in the meta attribute"})]})},{id:"2",value:"2",title:"item 2",meta:[{id:"description",title:"description",value:"description text"},{id:"secondary_category",title:"secondary category",value:"knowledge accelerator"}]},{id:"3",value:"3",title:"item 3",subtitle:"item 3 subtitle"}]},2:{sortBy:["title"],entries:[{id:"1",value:"folder 1",title:"folder 1",children:{sortBy:["title","size"],filterBy:"fileType",entries:[{id:"1-1",value:"file1.pdf",title:"file1.pdf",fileType:"pdf",size:"100",icon:t=>i.jsx(n,{size:16,...t}),tag:"business",children:{entries:[{id:"9000",value:"9000.html",title:"9000.html",fileType:"html",size:"9000",icon:t=>i.jsx(n,{size:16,...t})}]}},{id:"1-2",value:"index.js",title:"index.js",fileType:"js",size:"200",icon:t=>i.jsx(n,{size:16,...t})},{id:"1-3",value:"sitemap.xml",title:"sitemap.xml",fileType:"xml",size:"10",icon:t=>i.jsx(n,{size:16,...t})}]}},{id:"2",value:"folder 2",title:"folder 2",children:{entries:[{id:"7000",value:"7000.html",title:"7000.html",fileType:"html",size:"7000",icon:t=>i.jsx(n,{size:16,...t})}]}}]},3:{modifiers:{id:"role",label:"Role",options:["editor","viewer","admin"]},entries:[{id:"1",value:"1",title:"item 1",subtitle:"item 1 subtitle",role:"editor"},{id:"2",value:"2",title:"item 2",role:"editor"},{id:"3",value:"3",title:"item 3",subtitle:"item 3 subtitle",role:"admin"}]},4:{entries:[{id:"1",value:"1",title:"item 1",subtitle:"item 1 subtitle",avatar:{src:D,alt:"head shot",theme:"light"}},{id:"2",value:"2",title:"item 2",subtitle:"item 2 subtitle",avatar:{icon:t=>i.jsx(h,{size:24,...t}),backgroundColor:"dark-green",theme:"light"}},{id:"3",value:"3",title:"item 3",subtitle:"item 3 subtitle",avatar:{icon:t=>i.jsx(h,{size:24,...t}),theme:"light"}}]}}}}},d={className:"placeholder-class",clearFiltersText:"Clear filters",closeIconDescription:"Close",columnInputPlaceholder:"Find",description:"Select business terms from the list",globalSearchLabel:"global search label",globalSearchPlaceholder:"Find business terms",illustrationTheme:"light",influencerTitle:"Selected business terms",itemsLabel:"Business terms",metaIconDescription:"View meta information",metaPanelTitle:"Personal information",navIconDescription:"View children",noResultsTitle:"No results",noSelectionDescription:"Select a term to include the full set of the governance artifacts it contains in the governance scope.",noSelectionTitle:"No business terms selected",noResultsDescription:"Try again",onCloseButtonText:"Cancel",onSubmit:t=>console.log(t),onSubmitButtonText:"Add",searchResultsTitle:"Search results",title:"Add business terms",sortByLabel:"Sort",filterByLabel:"Filter"},m=(t,s)=>{const[C,g]=F.useState((s==null?void 0:s.viewMode)!=="docs");return i.jsxs(i.Fragment,{children:[i.jsx(r,{...t,open:C,onClose:()=>g(!1)}),i.jsx(O,{onClick:()=>g(!0),children:"Launch AddSelect"})]})},a=m.bind({});a.args={items:1,...d};const o=m.bind({});o.args={items:2,...d,globalFilters:[{id:"fileType",label:"File type"},{id:"size",label:"Size"},{id:"tag",label:"Tag"}],globalFiltersIconDescription:"Filter",globalFiltersLabel:"Filters",globalFiltersPlaceholderText:"Choose an option",globalFiltersPrimaryButtonText:"Apply",globalFiltersSecondaryButtonText:"Reset",globalSortBy:["title"]};const l=m.bind({});l.args={items:3,...d};const p=m.bind({});p.args={items:4,...d};var f,y,b;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <MultiAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(b=(y=a.parameters)==null?void 0:y.docs)==null?void 0:b.source}}};var v,T,q;o.parameters={...o.parameters,docs:{...(v=o.parameters)==null?void 0:v.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <MultiAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(q=(T=o.parameters)==null?void 0:T.docs)==null?void 0:q.source}}};var x,S,w;l.parameters={...l.parameters,docs:{...(x=l.parameters)==null?void 0:x.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <MultiAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(w=(S=l.parameters)==null?void 0:S.docs)==null?void 0:w.source}}};var B,k,j;p.parameters={...p.parameters,docs:{...(B=p.parameters)==null?void 0:B.docs,source:{originalSource:`(args, context) => {
  const [open, setOpen] = useState(context?.viewMode !== 'docs');
  return <>
      <MultiAddSelect {...args} open={open} onClose={() => setOpen(false)} />
      <Button onClick={() => setOpen(true)}>Launch AddSelect</Button>
    </>;
}`,...(j=(k=p.parameters)==null?void 0:k.docs)==null?void 0:j.source}}};const at=["Default","WithHierarchy","WithModifiers","WithAvatars"];export{a as Default,p as WithAvatars,o as WithHierarchy,l as WithModifiers,at as __namedExportsOrder,nt as default};
