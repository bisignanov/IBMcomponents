//
// Copyright IBM Corp. 2022, 2022
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

// Standard imports.
@import '../../global/styles/project-settings';
@import '../../global/styles/mixins';

// Other Carbon settings.
// TODO: @import 'carbon-components/scss/globals/grid/grid'; if needed

// InlineEdit uses the following Carbon components:
// TODO: @import(s) of Carbon component styles used by InlineEdit

// InlineEdit uses the following Carbon for IBM Products components:
// TODO: @import(s) of IBM Products component styles used by InlineEdit

// cut down version borrowed from 'carbon-components/scss/globals/scss/vendor/@carbon/styles/scss/utilities/focus-outline';
@mixin input-outline($color: $focus) {
  outline: $spacing-01 solid $color;
  outline-offset: calc(-1 * $spacing-01);

  @media screen and (prefers-contrast) {
    outline-style: dotted;
  }
}

@mixin input-button-defaults() {
  width: var(--size);
  height: 100%;
  min-height: initial;
  max-height: var(--size);

  // stylelint-disable-next-line carbon/layout-token-use
  padding: calc(0.5 * (var(--size) - var(--icon-size)));
  border: 2px solid transparent;
}

// Define all component styles in a mixin which is then exported using
// the Carbon import-once mechanism.
@mixin inline-edit {
  // The block part of our conventional BEM class names (blockClass__E--M).
  $block-class: #{$pkg-prefix}--inline-edit;

  @include block-wrap($block-class, 3) {
    --size: #{$spacing-08};
    --icon-size: #{$spacing-05};
    --background-color: #{$ui-background};

    &:hover {
      --background-color: #{$hover-field};
      // background-color: $background-color;
    }

    position: relative;
    display: inline-flex;
    // min-width: 250px; // similar to min input box with room for edit-controls
    max-width: 100%;
    height: var(--size);
    background-color: var(--background-color);
    cursor: text; // appear to be part of the text box
    transition: background-color $duration--fast-01 motion(entrance, productive),
      box-shadow $duration--fast-01 motion(entrance, productive),
      border-color $duration--fast-01 motion(entrance, productive);

    white-space: nowrap;

    &.#{$block-class}--sm {
      --size: #{$spacing-07};
      --icon-size: #{$spacing-05};
    }

    &.#{$block-class}--lg {
      --size: #{$spacing-09};
      --icon-size: #{$spacing-05};
    }

    // &:focus-within
    &.#{$block-class}--editing {
      @include input-outline($focus);

      background-color: $ui-01;
    }

    .#{$block-class}--invalid {
      @include input-outline($support-01);
    }

    .#{$block-class}__input {
      display: flex;
      overflow: hidden;
      max-width: calc(100% - 2 * var(--size) - $spacing-05);
      height: 100%;
      align-items: center;
      // stylelint-disable-next-line carbon/layout-token-use
      margin-right: calc(2 * var(--size)); // room for controls
      margin-left: $spacing-05;

      &:focus {
        // stylelint-disable-next-line
        outline: none;
      }
    }

    .#{$block-class}__placeholder {
      position: absolute;
      left: $spacing-03;
    }

    .#{$block-class}__controls {
      // not simply flexed in as this causes flexbox to mis-measure the size of the input
      position: absolute;
      top: 0;
      // stylelint-disable-next-line carbon/layout-token-use
      right: 0;
      width: calc(2 * var(--size));
      height: 100%;
      cursor: text;
    }

    .#{$block-class}__save,
    .#{$block-class}__cancel {
      @include input-button-defaults();

      // input does not have focus
      &:hover {
        border-top-color: $focus;
        border-bottom-color: $focus;
        outline: initial;
      }

      &:focus:active,
      &:focus {
        // border focus input does NOT have focus
        border-color: $focus;
        box-shadow: initial;
        outline: initial;
      }

      &:focus:active:hover {
        box-shadow: inset 0 0 0 1px $field-01;
      }

      &::before {
        background-color: transparent;
      }

      &[disabled] {
        border-color: transparent;
      }
    }
    .#{$block-class}__save {
      &:hover {
        border-right-color: $focus;
      }
    }

    .#{$block-class}__edit {
      @include input-button-defaults();

      position: absolute;
      top: 0;
      right: 0;
      // pointer-events: none;

      &:hover,
      &:active,
      &:focus {
        border-color: transparent;
        background-color: transparent;
        box-shadow: initial;
        outline: initial;
      }
    }

    .#{$block-class}__edit--hover-visible {
      opacity: 0;
      transition: opacity $duration--fast-01 motion(entrance, productive);
    }

    &:hover .#{$block-class}__edit--hover-visible {
      opacity: 1;
    }
  }
}

@include exports('inline-edit') {
  @include inline-edit;
}
