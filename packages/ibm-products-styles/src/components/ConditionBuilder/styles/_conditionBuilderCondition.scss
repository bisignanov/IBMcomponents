@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/motion' as *;
@use '@carbon/styles/scss/components/tag' as *;
@use '@carbon/styles/scss/utilities/focus-outline';
@use '../../../global/styles/project-settings' as c4p-settings;
@use '@carbon/styles/scss/type';
@use '@carbon/styles/scss/type' as *;
@use '@carbon/react/scss/utilities';

$block-class: #{c4p-settings.$pkg-prefix}--condition-builder;

.#{$block-class}__condition-block,
.#{$block-class}__condition-block .#{$block-class}__block {
  position: relative;
  display: inline-flex;
}

.#{$block-class} [role='row'] {
  position: relative;
  outline: none;
}
.#{$block-class} [role='row']:focus::after {
  @include focus-outline.focus-outline('outline');

  position: absolute;
  content: '';
  inset: 0;
}
.#{$block-class}__condition__deletion-preview
  .#{$block-class}__button:not(
    .#{$block-class}__statement-button,
    .#{$block-class}__connector-button
  ) {
  background-color: $tag-background-red;
  color: $tag-color-red;
}

.#{$block-class}__condition__deletion-preview
  .#{$block-class}__button:not(
    .#{$block-class}__statement-button,
    .#{$block-class}__connector-button
  ):hover {
  background-color: $tag-hover-red;
}

.#{$block-class}__text-ellipsis {
  display: block;
  overflow: hidden;
  max-width: $spacing-13;
  text-overflow: ellipsis;
  text-wrap: nowrap;
}
.#{$block-class}__group-preview {
  height: 0;
  opacity: 0;
  pointer-events: none;
  transition: all $duration-moderate-02 motion(exit, expressive);
}
.#{$block-class}__group-preview-animate {
  height: auto;
  opacity: 0.5;
  pointer-events: none;
  transition: all $duration-moderate-02 motion(exit, expressive);
}
.#{$block-class}__connector-disabled {
  display: flex;
  min-width: $spacing-10;
  align-items: center;
  background-color: $layer;
  color: $text-helper;
  padding-inline: $spacing-03;
}
