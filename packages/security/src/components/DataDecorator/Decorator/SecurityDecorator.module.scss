@use '../../../globals/layout' as layout;
@use '../../../globals/theme' as theme;

// todo update source styling instead of module scss? (no module scss is used on component?)

// common design(spacing, shape, text color)
$border: 1px solid theme.$decorative-01;
$round-border: layout.carbon--mini-units(
  $count: 12.5,
);

.isc {
  &Container {
    // flex content is no-wrap by default, so type/value parts do not wrap at narrower width
    display: inline-flex;
    max-width: 100%;
  }

  &TypePill {
    border: $border;
    border-top-left-radius: $round-border;
    border-bottom-left-radius: $round-border;
    padding-left: 0.5rem;

    .type {
      // remove redundant spacing
      border-right: 0;
    }
  }

  &ValuePill {
    border: $border;
    // remove redundant spacing
    border-left: 0;
    border-top-right-radius: $round-border;
    border-bottom-right-radius: $round-border;
    padding-right: 0.5rem;
    min-width: 0;

    .noTailTruncation {
      // was '30ch' which forcibly truncates content at 30ch and does not grow anymore even with more unused space
      max-width: unset;
    }
  }
}

.pill {
  padding: 0 layout.$carbon--spacing-03;
  border: $border;
  border-radius: $round-border;

  .type {
    border-right: $border;
  }

  // override blue text
  .value:global(.security--decorator__value) {
    color: theme.$text-01;
  }

  .noTailTruncation {
    // was '30ch' which forcibly truncates content at 30ch and does not grow anymore even with more unused space
    max-width: unset;
  }

  // interactive hover
  &[class*='interactive'] {
    &:hover,
    &:focus {
      $hovered-border-color: theme.$ui-04;

      border-color: $hovered-border-color;
      cursor: pointer;

      .type {
        border-color: $hovered-border-color;
      }

      .value {
        text-decoration: unset;
      }
    }
  }
}

.noBorderRadius {
  border-radius: unset;
}
