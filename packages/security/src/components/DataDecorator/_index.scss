////
/// Decorator component.
/// @group decorator
/// @copyright IBM Security 2019
////

@import '../Link/index';
@import '../PanelV2/index';

@import '../Component/mixins';
@import 'mixins';

@include security--component($name: decorator) {
  @include decorator;

  //todo have a feature-flag switcher to switch over to new decorator?

  // common design(spacing, shape, text color)
  $border: 1px solid $decorative-01;
  $round-border: carbon--mini-units(
    $count: 12.5,
  );

  $decoratorBlock: &;

  // value tail truncation at inline content
  &__value {
    display: inline;

    &--fit-value {
      // was '30ch' which forcibly truncates content at 30ch and does not grow anymore even with more unused space
      max-width: unset;
    }
  }

  &__dual {
    &-container {
      // flex content is no-wrap by default, so type/value parts do not wrap at narrower width
      display: inline-flex;
      max-width: 100%;
    }

    &-type-pill {
      border: $border;
      border-top-left-radius: $round-border;
      border-bottom-left-radius: $round-border;
      padding-left: 0.5rem;

      #{$decoratorBlock}__type {
        // remove redundant spacing
        border-right: 0;
      }
    }

    &-value-pill {
      border: $border;
      // remove redundant spacing
      border-left: 0;
      border-top-right-radius: $round-border;
      border-bottom-right-radius: $round-border;
      padding-right: 0.5rem;
      min-width: 0;
    }
  }

  &__pill,
  &__link {
    padding: 0 $carbon--spacing-03;
    border: $border;
    border-radius: $round-border;

    #{$decoratorBlock}__type {
      border-right: $border;
    }

    // override blue text
    #{$decoratorBlock}__value {
      color: $text-01;
    }

    // interactive hover
    &[class*='interactive'] {
      &:hover,
      &:focus {
        $hovered-border-color: $ui-04;

        border-color: $hovered-border-color;
        cursor: pointer;

        #{$decoratorBlock}__type {
          border-color: $hovered-border-color;
        }

        #{$decoratorBlock}__value {
          text-decoration: unset;
        }
      }
    }
  }

  // decorator with href should show value link UI cue
  &__link[class*='interactive']:hover {
    #{$decoratorBlock}__value {
      text-decoration: underline;
    }
  }

  &--noBorderRadius {
    border-radius: unset;
  }
}
