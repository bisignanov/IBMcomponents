////
/// Decorator component.
/// @group decorator
/// @copyright IBM Security 2019
////

@import '../Link/index';
@import '../PanelV2/index';

@import '../Component/mixins';
@import 'mixins';

@include security--component($name: decorator) {
  @include decorator;

  //todo have a feature-flag switcher to switch over to new decorator?

  // common design(spacing, shape, text color)
  $border: 1px solid $decorative-01;
  $round-border: carbon--mini-units(
    $count: 12.5,
  );

  $namespace: &;
  //.isc {
  //  &Container {
  //    // flex content is no-wrap by default, so type/value parts do not wrap at narrower width
  //    display: inline-flex;
  //    max-width: 100%;
  //  }
  //
  //  &TypePill {
  //    border: $border;
  //    border-top-left-radius: $round-border;
  //    border-bottom-left-radius: $round-border;
  //    padding-left: 0.5rem;
  //
  //    .type {
  //      // remove redundant spacing
  //      border-right: 0;
  //    }
  //  }
  //
  //  &ValuePill {
  //    border: $border;
  //    // remove redundant spacing
  //    border-left: 0;
  //    border-top-right-radius: $round-border;
  //    border-bottom-right-radius: $round-border;
  //    padding-right: 0.5rem;
  //    min-width: 0;
  //
  //    .noTailTruncation {
  //      // was '30ch' which forcibly truncates content at 30ch and does not grow anymore even with more unused space
  //      max-width: unset;
  //    }
  //  }
  //}
  //

  &__pill {
    padding: 0 $carbon--spacing-03;
    border: $border;
    border-radius: $round-border;

    #{$namespace}__type {
      border-right: $border;
    }

    // override blue text
    #{$namespace}__value {
      color: $text-01;
    }

    #{$namespace}__noTailTruncation {
      // was '30ch' which forcibly truncates content at 30ch and does not grow anymore even with more unused space
      max-width: unset;
    }
    //
    // interactive hover
    &[class*='interactive'] {
      &:hover,
      &:focus {
        $hovered-border-color: $ui-04;

        border-color: $hovered-border-color;
        cursor: pointer;

        #{$namespace}__type {
          border-color: $hovered-border-color;
        }

        #{$namespace}__value {
          text-decoration: unset;
        }
      }
    }
  }

  //.#{$namespace}--noBorderRadius {
  &--noBorderRadius {
    border-radius: unset;
  }
}


