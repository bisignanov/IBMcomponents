import{p as c,j as e,B as b}from"./settings-Bk-Ww79A.js";import{a as s}from"./chunk-MZXVCX43-CM0pFb8Z.js";import{A as j}from"./index-ChHx50Yr.js";import{R as O}from"./index-BwDkhjyp.js";import{P as t}from"./index-Dk74W0Oi.js";import{u as P,c as m}from"./useMergedRefs-DoviDd4t.js";import{O as _,a as M}from"./index-pjE0epes.js";import{A}from"./bucket-0-W33F5V9e.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CJvxHwuA.js";import"./events-CiqBCP_Q.js";import"./index-8ToAQMOn.js";import"./index-BONylQH5.js";import"./v4-CQkTLCs1.js";import"./bucket-18-D3Jjo1Sn.js";import"./bucket-9-nWRGrQ7I.js";import"./Text-BVB9JT_I.js";import"./index-Bxn63eqr.js";import"./useAttachedMenu-Cur6rMAi.js";import"./bucket-12-CjYCkBh9.js";import"./wrapFocus-CuszVIVc.js";import"./mergeRefs-CTUecegF.js";const p=`${c.prefix}--button-menu`,u="ButtonMenu",y={size:"lg",kind:"primary"};let o=O.forwardRef(({children:r,className:i,iconDescription:B,kind:l=y.kind,label:C,menuAriaLabel:T,menuOptionsClass:I,renderIcon:d,size:h=y.size,...k},w)=>{const f=P();return e.jsx(_,{...k,className:m(p,i,`${f}--btn--${h}`,{[`${p}__wrapper--${l}`]:l}),"aria-label":T,menuOptionsClass:m(`${p}__options`,I),size:h,renderIcon:()=>e.jsxs("div",{className:m(`${p}__trigger`),children:[C,d&&e.jsx(d,{"aria-hidden":"true","aria-label":B,className:`${f}--btn__icon`})]}),innerRef:w,children:r})});o.deprecated={level:"warn",details:`Please replace ${u} with Carbon's MenuButton`};o=c.checkComponentEnabled(o,u);o.displayName=u;o.propTypes={children:t.arrayOf(t.element).isRequired,className:t.string,iconDescription:b.propTypes.iconDescription,kind:t.oneOf(["primary","tertiary","ghost"]),label:t.node,menuAriaLabel:t.string.isRequired,menuOptionsClass:t.string,renderIcon:b.propTypes.renderIcon,size:t.oneOf(["sm","md","lg"])};o.__docgenInfo={description:`Combining a standard button with an overflow menu, this component appears
as a button and has all the usual carbon Button props and rendering, but
acts as an overflow menu when clicked. The ButtonMenu component can contain
zero to many ButtonMenuItem, which is identical to the carbon
OverflowMenuItem component.`,methods:[],displayName:"ButtonMenu",props:{kind:{defaultValue:{value:"'primary'",computed:!1},description:"The three types the menu button supports: primary, tertiary and ghost.",type:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'tertiary'",computed:!1},{value:"'ghost'",computed:!1}]},required:!1},size:{defaultValue:{value:"'lg'",computed:!1},description:`The size of the button for the menu trigger.
The menu button supports: sm, md, lg`,type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'md'",computed:!1},{value:"'lg'",computed:!1}]},required:!1},children:{description:`Provide the contents of the ButtonMenu. This should be one or more
ButtonMenuItem components.`,type:{name:"arrayOf",value:{name:"element"}},required:!0},className:{description:"Provide an optional class to be applied to the containing node.",type:{name:"string"},required:!1},iconDescription:{description:"If specifying the `renderIcon` prop, provide a description for that icon that can\nbe read by screen readers",type:{name:"custom",raw:"Button.propTypes.iconDescription"},required:!1},label:{description:"The button label for the menu trigger.",type:{name:"node"},required:!1},menuAriaLabel:{description:"Provide the ariaLabel prop to be passed to the OverflowMenu. This is distinctly\nseparate from `label` to support icon only ButtonMenus",type:{name:"string"},required:!0},menuOptionsClass:{description:"class name applied to the overflow options",type:{name:"string"},required:!1},renderIcon:{description:`Optional prop to allow overriding the icon rendering.
Can be a React component class`,type:{name:"custom",raw:"Button.propTypes.renderIcon"},required:!1}}};const q="ButtonMenuItem";let n=O.forwardRef((r,i)=>e.jsx(M,{...r,ref:i}));n=c.checkComponentEnabled(n,q);n.propTypes=M.propTypes;n.__docgenInfo={description:`A menu item to include in a button menu component. This component has the
same props and behaviors as carbon OverflowMenuItem.`,methods:[],displayName:"ButtonMenuItem",composes:["@carbon/react"]};const oe={title:"IBM Products/Internal/ButtonMenu",component:o,tags:["autodocs"],parameters:{}},N=r=>e.jsx(j,{type:"deprecation-notice",text:e.jsxs("div",{children:["This component is deprecated and will be removed in the next major version. Please migrate to Carbon's"," ",e.jsx("a",{href:"https://react.carbondesignsystem.com/?path=/docs/components-menubutton--overview",children:"MenuButton"}),"."]}),children:e.jsxs(o,{label:"Primary button",menuAriaLabel:"Primary button",renderIcon:i=>e.jsx(A,{size:16,...i}),...r,children:[e.jsx(n,{itemText:"Option 1a",onClick:s("Click on Option 1")}),e.jsx(n,{itemText:"Option 2",onClick:s("Click on Option 2")}),e.jsx(n,{itemText:"Option 3",onClick:s("Click on Option 3")}),e.jsx(n,{itemText:"Option 4",onClick:s("Click on Option 4"),hasDivider:!0})]})}),a=N.bind({});a.storyName="Button menu";var v,g,x;a.parameters={...a.parameters,docs:{...(v=a.parameters)==null?void 0:v.docs,source:{originalSource:`args => {
  return <Annotation type="deprecation-notice" text={<div>
          This component is deprecated and will be removed in the next major
          version. Please migrate to Carbon's{' '}
          <a href="https://react.carbondesignsystem.com/?path=/docs/components-menubutton--overview">
            MenuButton
          </a>
          .
        </div>}>
      <ButtonMenu label="Primary button" menuAriaLabel="Primary button" renderIcon={props => <Add size={16} {...props} />} {...args}>
        <ButtonMenuItem itemText="Option 1a" onClick={action(\`Click on Option 1\`)} />
        <ButtonMenuItem itemText="Option 2" onClick={action(\`Click on Option 2\`)} />
        <ButtonMenuItem itemText="Option 3" onClick={action(\`Click on Option 3\`)} />
        <ButtonMenuItem itemText="Option 4" onClick={action(\`Click on Option 4\`)} hasDivider />
      </ButtonMenu>
    </Annotation>;
}`,...(x=(g=a.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const re=["buttonMenu"];export{re as __namedExportsOrder,a as buttonMenu,oe as default};
