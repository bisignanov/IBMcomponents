import{p as N,j as k}from"./settings-DrdbGLhD.js";import{r as e}from"./index-BwDkhjyp.js";import{c as S}from"./deprecate-D9ms-jbM.js";import{P as t}from"./index-Dk74W0Oi.js";import{r as z}from"./index-BONylQH5.js";import{C as b,a as G,b as U}from"./CoachmarkOverlayElements-qOw1t6zT.js";import{g as Y}from"./devtools-B_UYo462.js";import{l as J}from"./lodash-C6Eq4oiK.js";function Q(o,s,n,a){const l=e.useRef(),r=n===b.TOOLTIP;e.useLayoutEffect(()=>{l.current=a},[a]),e.useEffect(()=>{function m(p){const y=s.current&&!s.current.contains(p.target),f=o.current&&!o.current.contains(p.target);y&&f&&d()}function d(){r&&l.current()}return document.addEventListener("mousedown",m),()=>{document.removeEventListener("mousedown",m)}},[o,s,r])}const X=(o,s)=>{const n=e.useRef(null);e.useEffect(()=>{n.current=s}),e.useEffect(()=>{function a(l){n.current&&n.current(l)}return window.addEventListener(o,a),()=>{window.removeEventListener(o,a)}},[o])},E=`${N.prefix}--coachmark`,Z=`${E}-overlay`,O="Coachmark",v={align:"bottom",onClose:()=>{},overlayKind:"tooltip",theme:"light"};let u=e.forwardRef(({align:o=v.align,children:s,className:n,onClose:a=v.onClose,overlayClassName:l,overlayKind:r=v.overlayKind,overlayRef:m,portalTarget:d,positionTune:p,target:y,theme:f=v.theme,...A},I)=>{const _=r===b.TOOLTIP,g=r===b.STACKED,V=d?document.querySelector(d)??document.querySelector("body"):document.querySelector("body"),[T,i]=e.useState(g),[x,w]=e.useState(!1),[B,D]=e.useState(),[M,j]=e.useState({x:0,y:0}),H=e.useRef(),K=e.useRef(),R=I||K,q=m||H,L=()=>{i(!1)},h=e.useCallback(()=>{g||i(!1),a()},[g,a]),C=e.useCallback(c=>{c.key==="Escape"&&h()},[h]);e.useEffect(()=>(document.addEventListener("keydown",C,!1),()=>{document.removeEventListener("keydown",C,!1)}),[C]);const P=c=>{D(c.target.getBoundingClientRect()),j({x:c.target.offsetLeft,y:c.target.offsetTop}),_?i(W=>!W):(i(!1),w(!0))},$={buttonProps:{"aria-expanded":T,tabIndex:0,onClick:P,onDoubleClick:P},closeButtonProps:{onClick:h},targetRect:B,targetOffset:M,align:o,positionTune:p},F=J.throttle(()=>{L()},2e3);return e.useEffect(()=>{x&&(w(!1),i(!0))},[x]),e.useEffect(()=>()=>i(!1),[]),Q(R,q,r,L),X("resize",F),k.jsx(G.Provider,{value:$,children:k.jsxs("div",{className:S(E,`${E}__${f}`,n),ref:R,...A,...Y(O),children:[y,T&&z.createPortal(k.jsx(U,{ref:q,fixedIsVisible:!1,kind:r,onClose:h,theme:f,className:S(l,`${Z}--is-visible`),children:s}),V||document.body)]})})});const ee=typeof HTMLElement>"u"?t.object:t.instanceOf(HTMLElement);u=N.checkComponentEnabled(u,O);u.displayName=O;u.propTypes={align:t.oneOf(["bottom","bottom-left","bottom-right","left","left-top","left-bottom","right","right-top","right-bottom","top","top-left","top-right"]),children:t.node.isRequired,className:t.string,onClose:t.func,overlayClassName:t.string,overlayKind:t.oneOf(["tooltip","floating","stacked"]),overlayRef:t.shape({current:ee}),portalTarget:t.string,positionTune:t.shape({x:t.number,y:t.number}),target:t.node,theme:t.oneOf(["light","dark"])};u.__docgenInfo={description:`Coachmarks are used to call out specific functionality or concepts
within the UI that may not be intuitive but are important for the
user to gain understanding of the product's main value and discover new use cases.`,methods:[],displayName:"Coachmark",props:{align:{defaultValue:{value:"'bottom'",computed:!1},description:`Where to render the Coachmark relative to its target.
Applies only to Floating and Tooltip Coachmarks.
@see COACHMARK_ALIGNMENT`,type:{name:"enum",value:[{value:"'bottom'",computed:!1},{value:"'bottom-left'",computed:!1},{value:"'bottom-right'",computed:!1},{value:"'left'",computed:!1},{value:"'left-top'",computed:!1},{value:"'left-bottom'",computed:!1},{value:"'right'",computed:!1},{value:"'right-top'",computed:!1},{value:"'right-bottom'",computed:!1},{value:"'top'",computed:!1},{value:"'top-left'",computed:!1},{value:"'top-right'",computed:!1}]},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},description:"Function to call when the Coachmark closes.",type:{name:"func"},required:!1},overlayKind:{defaultValue:{value:"'tooltip'",computed:!1},description:"What kind or style of Coachmark to render.",type:{name:"enum",value:[{value:"'tooltip'",computed:!1},{value:"'floating'",computed:!1},{value:"'stacked'",computed:!1}]},required:!1},theme:{defaultValue:{value:"'light'",computed:!1},description:"Determines the theme of the component.",type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},children:{description:`Coachmark should use a single CoachmarkOverlayElements component as a child.
@see CoachmarkOverlayElements`,type:{name:"node"},required:!0},className:{description:"Optional class name for this component.",type:{name:"string"},required:!1},overlayClassName:{description:"Optional class name for the Coachmark Overlay component.",type:{name:"string"},required:!1},overlayRef:{description:"",type:{name:"shape",value:{current:{name:"custom",raw:"overlayRefType as PropTypes.Validator<HTMLElement | null>",required:!1}}},required:!1},portalTarget:{description:`By default, the Coachmark will be appended to the end of \`document.body\`.
The Coachmark will remain persistent as the user navigates the app until
the user closes the Coachmark.

Alternatively, the app developer can tightly couple the Coachmark to a DOM
element or other component by specifying a CSS selector. The Coachmark will
remain visible as long as that element remains visible or mounted. When the
element is hidden or component is unmounted, the Coachmark will disappear.`,type:{name:"string"},required:!1},positionTune:{description:"Fine tune the position of the target in pixels. Applies only to Beacons.",type:{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}},required:!1},target:{description:"The optional button or beacon that the user will click to show the Coachmark.",type:{name:"node"},required:!1}}};export{u as C};
