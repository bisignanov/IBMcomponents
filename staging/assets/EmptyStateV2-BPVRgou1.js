const __vite__fileDeps=["./ErrorIllustration-BYUfgo6s.js","./settings-Bk-Ww79A.js","./index-BwDkhjyp.js","./_commonjsHelpers-BosuxZz1.js","./index-CJvxHwuA.js","./index-Dk74W0Oi.js","./useMergedRefs-DoviDd4t.js","./events-CiqBCP_Q.js","./index-8ToAQMOn.js","./index-BONylQH5.js","./uuidv4-BQrI85uz.js","./NoDataIllustration-BN7hR1wg.js","./NoTagsIllustration-_xhSq-Tr.js","./NotFoundIllustration-CsQd4na7.js","./NotificationsIllustration-Db1-Zytm.js","./UnauthorizedIllustration-DyzXbxbP.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{j as o,p as g,B as I}from"./settings-Bk-Ww79A.js";import{r as i,R as P}from"./index-BwDkhjyp.js";import{P as t}from"./index-Dk74W0Oi.js";import{c as p}from"./useMergedRefs-DoviDd4t.js";import{L as N}from"./Link-BwB-I-vI.js";import{g as D}from"./devtools-jK7s13u1.js";import"./props-helper-DKwMo5Mj.js";import{_ as s}from"./iframe-DrDxz63W.js";const q=i.lazy(()=>s(()=>import("./ErrorIllustration-BYUfgo6s.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),z=i.lazy(()=>s(()=>import("./NoDataIllustration-BN7hR1wg.js"),__vite__mapDeps([11,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),$=i.lazy(()=>s(()=>import("./NoTagsIllustration-_xhSq-Tr.js"),__vite__mapDeps([12,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),R=i.lazy(()=>s(()=>import("./NotFoundIllustration-CsQd4na7.js"),__vite__mapDeps([13,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),j=i.lazy(()=>s(()=>import("./NotificationsIllustration-Db1-Zytm.js"),__vite__mapDeps([14,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),O=i.lazy(()=>s(()=>import("./UnauthorizedIllustration-DyzXbxbP.js"),__vite__mapDeps([15,1,2,3,4,5,6,7,8,9,10]),import.meta.url)),V=a=>{switch(a){case"error":return q;case"noData":return z;case"noTags":return $;case"notifications":return j;case"notFound":return R;case"unauthorized":return O;default:return()=>null}},f=({kind:a,...m})=>{const n=V(a);return o.jsx(i.Suspense,{children:o.jsx(n,{...m})})};f.propTypes={kind:t.string};f.__docgenInfo={description:"",methods:[],displayName:"EmptyStateIllustration",props:{kind:{description:"",type:{name:"string"},required:!1}}};const e=`${g.prefix}--empty-state`,h="EmptyStateV2";let r=P.forwardRef((a,m)=>{const{action:n,className:v,illustration:c,illustrationDescription:_,illustrationPosition:E="top",illustrationTheme:x,kind:l,link:d,size:u="lg",subtitle:y,title:T,...b}=a,k={size:u,theme:x,title:_,kind:l};return o.jsxs("div",{...b,className:p([e,v,`${e}-position--${E}`,{[`${e}-type--${l}`]:l}]),ref:m,...D(h),children:[c&&o.jsx("img",{src:c,alt:_,className:p([`${e}__illustration`,`${e}__illustration--${u}`])}),!c&&l&&o.jsx(f,{...k}),o.jsxs("div",{className:`${e}__content`,children:[o.jsx("h3",{className:p(`${e}__header`,{[`${e}__header--small`]:u==="sm"}),children:T}),y&&o.jsx("p",{className:p(`${e}__subtitle`,{[`${e}__subtitle--small`]:u==="sm"}),children:y}),n&&o.jsx(I,{...n,className:`${e}__action-button`,size:"sm",children:n.text}),d&&o.jsx(N,{...d,className:`${e}__link`,children:d.text})]})]})});r=g.checkComponentEnabled(r,h);r.propTypes={action:t.PropTypes.shape({text:t.string}),className:t.string,illustration:t.string,illustrationDescription:t.string,illustrationPosition:t.oneOf(["top","right","bottom","left"]),illustrationTheme:t.oneOf(["light","dark"]),kind:t.oneOf(["error","noData","noTags","notFound","notifications","unauthorized"]),link:t.shape({text:t.string}),size:t.oneOf(["sm","lg"]),subtitle:t.oneOfType([t.string,t.node]),title:t.oneOfType([t.string,t.node]).isRequired};r.displayName=h;r.__docgenInfo={description:"This is the V2 version of the `EmptyState` component. To use you must pass the `v2` prop to the V1 version of the component `EmptyState` and use the props below.\nIn order to avoid breaking changes in the future `EmptyStateV2` is not actually directly importable.",methods:[],displayName:"EmptyStateV2",props:{action:{description:"Props for the action button. Refer to the Carbon Components button documentation for full list of props.",type:{name:"shape",value:{text:{name:"string",required:!1}}},required:!1},className:{description:"Provide an optional class to be applied to the containing node.",type:{name:"string"},required:!1},illustration:{description:"Source for the illustration image if you choose to use your own custom image. Passing an illustration prop will supersede the kind option.",type:{name:"string"},required:!1},illustrationDescription:{description:"The alt text for the illustration",type:{name:"string"},required:!1},illustrationPosition:{description:"Designates the position of the illustration relative to the content",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'right'",computed:!1},{value:"'bottom'",computed:!1},{value:"'left'",computed:!1}]},required:!1},illustrationTheme:{description:`Empty state illustration theme variations.
To ensure you use the correct themed illustrations, you can conditionally specify light or dark
based on your app's current theme value. Example:
\`illustrationTheme={appTheme === ('carbon--g100' || 'carbon--g90') ? 'dark' : 'light'}\``,type:{name:"enum",value:[{value:"'light'",computed:!1},{value:"'dark'",computed:!1}]},required:!1},kind:{description:"Determines which predefined illustration will be displayed",type:{name:"enum",value:[{value:"'error'",computed:!1},{value:"'noData'",computed:!1},{value:"'noTags'",computed:!1},{value:"'notFound'",computed:!1},{value:"'notifications'",computed:!1},{value:"'unauthorized'",computed:!1}]},required:!1},link:{description:"Props for the link. Refer to the Carbon Components link documentation for full list of props.",type:{name:"shape",value:{text:{name:"string",required:!1}}},required:!1},size:{description:"Empty state size",type:{name:"enum",value:[{value:"'sm'",computed:!1},{value:"'lg'",computed:!1}]},required:!1},subtitle:{description:"Empty state subtext",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},title:{description:"Empty state heading",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!0}}};export{r as E};
