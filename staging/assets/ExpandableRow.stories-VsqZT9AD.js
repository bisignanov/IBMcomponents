import{i as w,j as i}from"./settings-CljJQLyl.js";import{R as f,r as S}from"./index-BwDkhjyp.js";import{a as s}from"./chunk-MZXVCX43-CM0pFb8Z.js";import{g as h}from"./getBatchActions-DcwftKIC.js";import{D as d,a as T,m as E,u as D}from"./_storybook-styles-Bwlc2I7K.js";import{D as C}from"./DatagridActions-CJZ5Nf67.js";import{D as b}from"./DatagridPagination-BnqQyN9g.js";import{A as r}from"./getArgTypes-CUsKgYxs.js";import{S as R}from"./StoryDocsPage-D6alOP-V.js";import{u as H}from"./useExpandedRow-BQtxxPKS.js";import{u as y}from"./useSelectRows-DNFkd6zh.js";import{u as B}from"./useStickyColumn-B4RJGFqy.js";import{a as k}from"./bucket-6-CJUP1MJz.js";import{T as P}from"./bucket-17-ByMkANur.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CJvxHwuA.js";import"./index-Dk74W0Oi.js";import"./floating-ui.react-C-lGofMW.js";import"./index-BONylQH5.js";import"./events-B5D95Jtx.js";import"./index-1ulDwjQN.js";import"./v4-CQkTLCs1.js";import"./bucket-0-M87sILds.js";import"./devtools-C9kUiWhx.js";import"./feature-flags-DvPVNspo.js";import"./TableRow-DzQmO39h.js";import"./wrapComponent-BLuFpRME.js";import"./TableToolbar-DqP5NbcL.js";import"./Text-B6Yb8geH.js";import"./ErrorEmptyState-CkERAX3y.js";import"./Link-Nc6ULaYi.js";import"./EmptyState-uNZXokGj.js";import"./props-helper-BM8tfO54.js";import"./EmptyStateV2-D-UWIa4a.js";import"./iframe-BH6l3MBf.js";import"../sb-preview/runtime.js";import"./ErrorIllustration-CLS23MpB.js";import"./uuidv4-BQrI85uz.js";import"./NoDataEmptyState-QzafDRmC.js";import"./NoDataIllustration-CUuTwsJd.js";import"./NotFoundEmptyState-DwWN6hBB.js";import"./NotFoundIllustration-BpRU7cp_.js";import"./index.esm-Deewl5uj.js";import"./usePreviousValue-DDnp_zt4.js";import"./extends-CCbyfPlC.js";import"./index-DCeAv8ou.js";import"./index-C2eUe6cH.js";import"./index-C0xX6qoh.js";import"./index-DrFu-skq.js";import"./useResizeObserver-CYrpFlRY.js";import"./useIsomorphicEffect-D7JMtAof.js";import"./useWindowResize-DOWR4RAk.js";import"./useControllableState-DwpxGhsf.js";import"./useAttachedMenu-D2EsEGO9.js";import"./mergeRefs-CTUecegF.js";import"./getFocusableElements-BW7cf991.js";import"./index-DnHywpOJ.js";import"./useClickOutside-Dcd11u7q.js";import"./AccordionItem-BxU1Dtzq.js";import"./Search-D4hFpBcN.js";import"./FormContext-C7kRVu4t.js";import"./bucket-14-DGwr16LJ.js";import"./index-CUiOlLtv.js";import"./LayerContext-DbU-6VX4.js";import"./motionConstants-CR5hPmRc.js";import"./tslib.es6-B4_xh3D5.js";import"./use-reduced-motion-BisnjenD.js";import"./index-DkUr2NOz.js";import"./ActionSet-0r0uXgna.js";import"./ButtonSet--6H_yrng.js";import"./InlineLoading-CCyGWQ0L.js";import"./Checkbox-XYcbknGw.js";import"./bucket-18-9qioxFta.js";import"./DatePicker-CEO3JyB1.js";import"./bucket-1-Dms9Nt5K.js";import"./Dropdown-DS9tr3Sg.js";import"./index-B1Zk_jvd.js";import"./index-DcAOwtUU.js";import"./FormGroup-CetGQBil.js";import"./NumberInput-B_IiETrc.js";import"./useNormalizedInputProps-ZjpNpqFw.js";import"./bucket-15-Bq0LvDr0.js";import"./RadioButton-BGfNrv8f.js";import"./RadioButtonGroup-CH1rFtmp.js";import"./MultiSelect-P-wnrMcX.js";import"./index-CfyPTyT-.js";import"./debounce-CI22LTdx.js";import"./toNumber-DVQITUtX.js";import"./TagSet-BajXNye4.js";import"./Tag-ZScs8sso.js";import"./DefinitionTooltip-BnINqBoN.js";import"./ComposedModal-qy9RXrDA.js";import"./requiredIfGivenPropIsTruthy-CU7JwK8h.js";import"./wrapFocus-DMN3GZJC.js";import"./index-xbyQ_51k.js";import"./usePortalTarget-BZfsLKvG.js";import"./SkeletonText-r21nqdSp.js";import"./getNodeTextContent-C8IeKkUQ.js";import"./index-CMVUDlQd.js";import"./index-_4Qtr-t1.js";import"./bucket-12-BOhlrMfU.js";import"./TableToolbarSearch-LXatkK20.js";import"./bucket-5-DSzoaoMh.js";import"./bucket-13-l2XVe1Gl.js";import"./Select-CL_xUhwT.js";import"./SelectItem-Cz4JfunI.js";import"./story-helper-Ba8HmmvT.js";import"./useFocusRowExpander-9BajiKyr.js";import"./TableSelectRow-HiPsGkQc.js";const A=()=>w.prefix,l=()=>i.jsx(R,{omitCodedExample:!0,blocks:[{description:"The `Datagrid` supports expandable rows with the use of the `useExpandedRow` hook.",source:{language:"jsx",code:`
import { Datagrid, useDatagrid, useExpandedRow } from '@carbon/ibm-products';

const App = () => {
  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid
  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid

  const expansionRenderer = ({ row }) => {
    return <div>Content for row index: {row.id}</div>;
  };

  const datagridState = useDatagrid(
    {
      columns,
      data,
      ExpandedRowContentComponent: expansionRenderer,
      expanderButtonTitleExpanded: 'Collapse row',
      expanderButtonTitleCollapsed: 'Expand row',
    },
    useExpandedRow
  );

  return <Datagrid datagridState={datagridState} />;
};
          `}}]});l.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};const Mt={title:"IBM Products/Components/Datagrid/ExpandableRow",component:d,tags:["autodocs"],parameters:{styles:T,docs:{page:l},layout:"fullscreen",argTypes:{featureFlags:{table:{disable:!0}}}}},v=[{Header:"Row Index",accessor:(e,o)=>o,sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],a={emptyStateTitle:"Empty state title",emptyStateDescription:"Description text explaining why table is empty",emptyStateSize:"lg",gridTitle:"Data table title",gridDescription:"Additional information if needed",useDenseHeader:!1,rowSize:"lg",rowSizes:[{value:"xl",labelText:"Extra large"},{value:"lg",labelText:"Large"},{value:"md",labelText:"Medium"},{value:"xs",labelText:"Small"}],onRowSizeChange:e=>{console.log("row size changed to: ",e)},rowActions:[{id:"edit",itemText:"Edit",icon:k,onClick:s("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:P,isDelete:!0,onClick:s("Clicked row action: delete")}],expandedContentHeight:96,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},N=({row:e})=>{const o=A();return i.jsxs("div",{className:`${o}__test-class-with-prefix-hook`,children:["Content for row index: ",e.id]})},_=({...e})=>{const o=f.useMemo(()=>[...v],[]),[c]=S.useState(E(10)),x=D({columns:o,data:c,initialState:{pageSize:10,pageSizes:[5,10,25,50]},DatagridActions:C,DatagridPagination:b,ExpandedRowContentComponent:N,tags:["autodocs"],batchActions:!0,toolbarBatchActions:h(),onRowExpand:(u,g)=>console.log(u,g),...e.defaultGridProps},B,y,H);return i.jsx(d,{datagridState:x})},j=({...e})=>i.jsx(_,{defaultGridProps:{...e}}),z={gridTitle:a.gridTitle,gridDescription:a.gridDescription,expandedContentHeight:a.expandedContentHeight,expanderButtonTitleExpanded:a.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:a.expanderButtonTitleCollapsed},G="With expandable row",t=j.bind({});t.storyName=G;t.argTypes={gridTitle:r.gridTitle,gridDescription:r.gridDescription,expandedContentHeight:r.expandedContentHeight,expanderButtonTitleExpanded:r.expanderButtonTitleExpanded,expanderButtonTitleCollapsed:r.expanderButtonTitleCollapsed};t.args={...z};var p,n,m;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`({
  ...args
}) => {
  return <ExpandedRows defaultGridProps={{
    ...args
  }} />;
}`,...(m=(n=t.parameters)==null?void 0:n.docs)==null?void 0:m.source}}};const Ft=["ExpandableRowStory"];export{t as ExpandableRowStory,Ft as __namedExportsOrder,Mt as default};
